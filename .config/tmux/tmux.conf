#
# server options
#

set -ag terminal-overrides ",xterm-256color:RGB"
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$XDG_DATA_HOME/tmux/plugins"

# zero-out escape time delay
set -s escape-time 0
# enable focus events
set -g focus-events on
# use system clipboard
set -g set-clipboard on

#
# session options
#

set -g default-shell "$SHELL"

# start window and pane numbering at 1
set -g base-index 1
# don't exit from tmux when closing a session
set -g detach-on-destroy off
# increase history size
set -g prompt-history-limit 10000
# renumber all windows when any window is closed
set -g renumber-windows on
# update the status bar every n seconds
set -g status-interval 5
# show status line on 'bottom' or 'top'
set -g status-position bottom
# display a message instead of sending a bell when activity occur
set -g visual-activity on

#
# window options
#

# aggressively resize the chosen window
setw -g aggressive-resize on
# activity monitoring
setw -g monitor-activity off
# set the starting index for pane numbers
setw -g pane-base-index 1

#
# other
#

# enable mouse support (tmux 2.1 and above)
setw -g mouse on

#
# key bindings
#

# unbind the default tmux prefix Ctrl+b
unbind C-b
# use Ctrl+a as our tmux prefix
set -g prefix C-a
bind C-a send-prefix

# use vim keybindings in copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# escape turns on copy mode
bind Escape copy-mode

# reload config file
bind r source-file $HOME/.config/tmux/tmux.conf \; display "Config reloaded!"

# make prefix p paste the buffer.
unbind p
bind p paste-buffer

# pane switching with awareness of nvim splits
bind -n C-h if -F "#{@pane-is-vim}" "send-keys C-h" "select-pane -L"
bind -n C-j if -F "#{@pane-is-vim}" "send-keys C-j" "select-pane -D"
bind -n C-k if -F "#{@pane-is-vim}" "send-keys C-k" "select-pane -U"
bind -n C-l if -F "#{@pane-is-vim}" "send-keys C-l" "select-pane -R"

# pane resizing with awareness of nvim splits
bind -n M-h if -F "#{@pane-is-vim}" "send-keys M-h" "resize-pane -L 5"
bind -n M-j if -F "#{@pane-is-vim}" "send-keys M-j" "resize-pane -D 5"
bind -n M-k if -F "#{@pane-is-vim}" "send-keys M-k" "resize-pane -U 5"
bind -n M-l if -F "#{@pane-is-vim}" "send-keys M-l" "resize-pane -R 5"

bind -T copy-mode-vi "C-h" select-pane -L
bind -T copy-mode-vi "C-j" select-pane -D
bind -T copy-mode-vi "C-k" select-pane -U
bind -T copy-mode-vi "C-l" select-pane -R

# shift alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# split window
unbind %
unbind '"'
bind "|" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"

# swapping windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# rename window
bind R command-prompt 'rename-window "%%"'

# new window
bind c new-window -c "#{pane_current_path}"

# bind clearing the screen
bind L send-keys "^L"

#
# plugins
#

# resurrect
set -g @resurrect-capture-pane-contents "on"
set -g @resurrect-strategy-vim "session"
set -g @resurrect-strategy-nvim "session"
set -g @resurrect-dir "$XDG_CACHE_HOME/.tmux/resurrect"

# continuum
set -g @continuum-restore "on"
set -g @continuum-boot "on"
set -g @continuum-save-interval "10"
set -g @continuum-systemd-start-cmd "start-server"

# theme: "day" or "night"
set -g @tokyo-night-tmux_theme "night"
set -g @tokyo-night-tmux_transparent 1
set -g @tokyo-night-tmux_show_datetime 0
set -g @tokyo-night-tmux_show_git 0
set -g @tokyo-night-tmux_show_wbg 0
set -g @tokyo-night-tmux_window_id_style none
set -g @tokyo-night-tmux_pane_id_style hide
set -g @tokyo-night-tmux_zoom_id_style hide

set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-yank"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "janoamaral/tokyo-night-tmux"

# hint: the space between } and { characters is required
if-shell '[ "$(uname -s)" = "Darwin" ]' {
    run "/opt/homebrew/opt/tpm/share/tpm/tpm"
} {
    run "~/.config/tmux/plugins/tpm/tpm"
}
